{"ast":null,"code":"import { ExpenseActions } from \"../ExpenseReducer\";\nexport const getExpenseFetching = email => {\n  return async dispatch => {\n    const getExpenseFetching = async email => {\n      try {\n        const response = await fetch(`https://user-credentials-5feae-default-rtdb.firebaseio.com/expenses/${email}.json`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        console.log(\"getExpenseFetching\", data);\n        let itemsArray = [];\n        let expensesAmount;\n        if (!!data) {\n          itemsArray = Object.keys(data).map(expense => {\n            return {\n              id: expense,\n              money: data[expense].money,\n              description: data[expense].description,\n              category: data[expense].category\n            };\n          });\n        }\n        expensesAmount = itemsArray.reduce((curNumber, expense) => {\n          return curNumber + Number(expense.money);\n        }, 0);\n        dispatch(ExpenseActions.addExpense({\n          itemsArray: itemsArray,\n          expensesAmount: expensesAmount\n        }));\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getExpenseFetching(email);\n  };\n};\nexport const addExpenseFetching = (expense, email) => {\n  return async dispatch => {\n    const addExpenseFetching = async (expense, email) => {\n      try {\n        const response = await fetch(`https://user-credentials-5feae-default-rtdb.firebaseio.com/expenses/${email}.json`, {\n          method: \"POST\",\n          body: JSON.stringify({\n            money: expense.money,\n            description: expense.description,\n            category: expense.category\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        console.log(\"addExpenseFetching\", data);\n        dispatch(getExpenseFetching(email));\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    addExpenseFetching(expense, email);\n  };\n};\nexport const editExpenseFetching = (expenseItem, email) => {\n  return async dispatch => {\n    const editExpenseFetching = async (expenseItem, email) => {\n      try {\n        const response = await fetch(`https://expensetracker-f79f1-default-rtdb.firebaseio.com/expenses/${email}/${expenseItem.id}.json`, {\n          method: \"PUT\",\n          body: JSON.stringify({\n            money: expenseItem.money,\n            description: expenseItem.description,\n            category: expenseItem.category\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        console.log(\"editExpenseFetching\", data);\n        dispatch(getExpenseFetching(email));\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    editExpenseFetching(expenseItem, email);\n  };\n};\nexport const deleteExpenseFetching = (id, email) => {\n  return async dispatch => {\n    const deleteExpenseFetching = async (id, email) => {\n      try {\n        const response = await fetch(`https://expensetracker-f79f1-default-rtdb.firebaseio.com/expenses/${email}/${id}.json`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        console.log(\"DeleteExpenseFetching\", data);\n        dispatch(getExpenseFetching(email));\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    deleteExpenseFetching(id, email);\n  };\n};","map":{"version":3,"names":["ExpenseActions","getExpenseFetching","email","dispatch","response","fetch","method","headers","data","json","console","log","itemsArray","expensesAmount","Object","keys","map","expense","id","money","description","category","reduce","curNumber","Number","addExpense","error","message","addExpenseFetching","body","JSON","stringify","alert","editExpenseFetching","expenseItem","deleteExpenseFetching"],"sources":["C:/Users/baran/Downloads/ExpenseTracker2.0-main/ExpenseTracker2.0-main/src/Components/Store/ActionCreators/ExpenseActionCreators.js"],"sourcesContent":["import { ExpenseActions } from \"../ExpenseReducer\";\r\n\r\nexport const getExpenseFetching = (email) => {\r\n  return async (dispatch) => {\r\n    const getExpenseFetching = async (email) => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://user-credentials-5feae-default-rtdb.firebaseio.com/expenses/${email}.json`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        console.log(\"getExpenseFetching\", data);\r\n        let itemsArray = [];\r\n        let expensesAmount;\r\n        if (!!data) {\r\n          itemsArray = Object.keys(data).map((expense) => {\r\n            return {\r\n              id: expense,\r\n              money: data[expense].money,\r\n              description: data[expense].description,\r\n              category: data[expense].category,\r\n            };\r\n          });\r\n        }\r\n        expensesAmount = itemsArray.reduce((curNumber, expense) => {\r\n          return curNumber + Number(expense.money);\r\n        }, 0);\r\n        dispatch(\r\n          ExpenseActions.addExpense({\r\n            itemsArray: itemsArray,\r\n            expensesAmount: expensesAmount,\r\n          })\r\n        );\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    getExpenseFetching(email);\r\n  };\r\n};\r\n\r\nexport const addExpenseFetching = (expense, email) => {\r\n  return async (dispatch) => {\r\n    const addExpenseFetching = async (expense, email) => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://user-credentials-5feae-default-rtdb.firebaseio.com/expenses/${email}.json`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              money: expense.money,\r\n              description: expense.description,\r\n              category: expense.category,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        console.log(\"addExpenseFetching\", data);\r\n        dispatch(getExpenseFetching(email));\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n    };\r\n    addExpenseFetching(expense, email);\r\n  };\r\n};\r\n\r\nexport const editExpenseFetching = (expenseItem, email) => {\r\n  return async (dispatch) => {\r\n    const editExpenseFetching = async (expenseItem, email) => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://expensetracker-f79f1-default-rtdb.firebaseio.com/expenses/${email}/${expenseItem.id}.json`,\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n              money: expenseItem.money,\r\n              description: expenseItem.description,\r\n              category: expenseItem.category,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        console.log(\"editExpenseFetching\", data);\r\n        dispatch(getExpenseFetching(email));\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n    };\r\n    editExpenseFetching(expenseItem, email);\r\n  };\r\n};\r\n\r\nexport const deleteExpenseFetching = (id, email) => {\r\n  return async (dispatch) => {\r\n    const deleteExpenseFetching = async (id, email) => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://expensetracker-f79f1-default-rtdb.firebaseio.com/expenses/${email}/${id}.json`,\r\n          {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        console.log(\"DeleteExpenseFetching\", data);\r\n        dispatch(getExpenseFetching(email));\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n    };\r\n    deleteExpenseFetching(id, email);\r\n  };\r\n};"],"mappings":"AAAA,SAASA,cAAc,QAAQ,mBAAmB;AAElD,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAC3C,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMF,kBAAkB,GAAG,MAAOC,KAAK,IAAK;MAC1C,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACzB,uEAAsEH,KAAM,OAAM,EACnF;UACEI,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CACF;QACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC;QACvC,IAAII,UAAU,GAAG,EAAE;QACnB,IAAIC,cAAc;QAClB,IAAI,CAAC,CAACL,IAAI,EAAE;UACVI,UAAU,GAAGE,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,CAACQ,GAAG,CAAEC,OAAO,IAAK;YAC9C,OAAO;cACLC,EAAE,EAAED,OAAO;cACXE,KAAK,EAAEX,IAAI,CAACS,OAAO,CAAC,CAACE,KAAK;cAC1BC,WAAW,EAAEZ,IAAI,CAACS,OAAO,CAAC,CAACG,WAAW;cACtCC,QAAQ,EAAEb,IAAI,CAACS,OAAO,CAAC,CAACI;YAC1B,CAAC;UACH,CAAC,CAAC;QACJ;QACAR,cAAc,GAAGD,UAAU,CAACU,MAAM,CAAC,CAACC,SAAS,EAAEN,OAAO,KAAK;UACzD,OAAOM,SAAS,GAAGC,MAAM,CAACP,OAAO,CAACE,KAAK,CAAC;QAC1C,CAAC,EAAE,CAAC,CAAC;QACLhB,QAAQ,CACNH,cAAc,CAACyB,UAAU,CAAC;UACxBb,UAAU,EAAEA,UAAU;UACtBC,cAAc,EAAEA;QAClB,CAAC,CAAC,CACH;MACH,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdhB,OAAO,CAACC,GAAG,CAACe,KAAK,CAACC,OAAO,CAAC;MAC5B;IACF,CAAC;IACD1B,kBAAkB,CAACC,KAAK,CAAC;EAC3B,CAAC;AACH,CAAC;AAED,OAAO,MAAM0B,kBAAkB,GAAG,CAACX,OAAO,EAAEf,KAAK,KAAK;EACpD,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMyB,kBAAkB,GAAG,OAAOX,OAAO,EAAEf,KAAK,KAAK;MACnD,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACzB,uEAAsEH,KAAM,OAAM,EACnF;UACEI,MAAM,EAAE,MAAM;UACduB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBZ,KAAK,EAAEF,OAAO,CAACE,KAAK;YACpBC,WAAW,EAAEH,OAAO,CAACG,WAAW;YAChCC,QAAQ,EAAEJ,OAAO,CAACI;UACpB,CAAC,CAAC;UACFd,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CACF;QACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC;QACvCL,QAAQ,CAACF,kBAAkB,CAACC,KAAK,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACdM,KAAK,CAACN,KAAK,CAACC,OAAO,CAAC;MACtB;IACF,CAAC;IACDC,kBAAkB,CAACX,OAAO,EAAEf,KAAK,CAAC;EACpC,CAAC;AACH,CAAC;AAED,OAAO,MAAM+B,mBAAmB,GAAG,CAACC,WAAW,EAAEhC,KAAK,KAAK;EACzD,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAM8B,mBAAmB,GAAG,OAAOC,WAAW,EAAEhC,KAAK,KAAK;MACxD,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACzB,qEAAoEH,KAAM,IAAGgC,WAAW,CAAChB,EAAG,OAAM,EACnG;UACEZ,MAAM,EAAE,KAAK;UACbuB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBZ,KAAK,EAAEe,WAAW,CAACf,KAAK;YACxBC,WAAW,EAAEc,WAAW,CAACd,WAAW;YACpCC,QAAQ,EAAEa,WAAW,CAACb;UACxB,CAAC,CAAC;UACFd,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CACF;QACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,IAAI,CAAC;QACxCL,QAAQ,CAACF,kBAAkB,CAACC,KAAK,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACdM,KAAK,CAACN,KAAK,CAACC,OAAO,CAAC;MACtB;IACF,CAAC;IACDM,mBAAmB,CAACC,WAAW,EAAEhC,KAAK,CAAC;EACzC,CAAC;AACH,CAAC;AAED,OAAO,MAAMiC,qBAAqB,GAAG,CAACjB,EAAE,EAAEhB,KAAK,KAAK;EAClD,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMgC,qBAAqB,GAAG,OAAOjB,EAAE,EAAEhB,KAAK,KAAK;MACjD,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACzB,qEAAoEH,KAAM,IAAGgB,EAAG,OAAM,EACvF;UACEZ,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CACF;QACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,IAAI,CAAC;QAC1CL,QAAQ,CAACF,kBAAkB,CAACC,KAAK,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACdM,KAAK,CAACN,KAAK,CAACC,OAAO,CAAC;MACtB;IACF,CAAC;IACDQ,qBAAqB,CAACjB,EAAE,EAAEhB,KAAK,CAAC;EAClC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}